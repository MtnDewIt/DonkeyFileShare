; AVAILABLE FUNCTIONS:

(help)

prints this output.
NETWORK SAFE: Unknown, assumed unsafe


(script_doc)

saves a file called hs_doc.txt with parameters for all script commands.
NETWORK SAFE: Unknown, assumed unsafe


(breakpoint <string>)

If breakpoints are enabled, pause execution when this statement is hit (displaying the given message).
NETWORK SAFE: Yes


(set)

set the value of a global variable.
NETWORK SAFE: Yes (depending on result)


(exit_game)

exits the game.
NETWORK SAFE: Unknown, assumed unsafe


(script_start <string>)

debug script launching: starts a scenario script by name.
NETWORK SAFE: No, for mainmenu only


(map_reset)

starts the map from the beginning.
NETWORK SAFE: Unknown, assumed unsafe


(map_reset_random)

starts the map from the beginning with a new random seed.
NETWORK SAFE: Unknown, assumed unsafe


(map_name <string>)

debug map launching: sets the multiplayer engine for the next map.
NETWORK SAFE: No, for init.txt only


(game_multiplayer <string>)

debug map launching: sets the multiplayer engine for the next map.
NETWORK SAFE: No, for init.txt only


(game_splitscreen <long>)

debug map launching: sets the number of multiplayer splitscreen players for the next map.
NETWORK SAFE: No, for init.txt only


(game_difficulty <game_difficulty>)

debug map launching: sets the difficulty of the next map.
NETWORK SAFE: No, for init.txt only


(game_active_primary_skulls <long>)

debug map launching: sets the active primary skulls of the next map.
NETWORK SAFE: No, for init.txt only


(game_active_secondary_skulls <long>)

debug map launching: sets the active secondary skulls of the next map.
NETWORK SAFE: No, for init.txt only


(game_coop_players <long>)

debug map launching: sets the number of coop players for the next map.
NETWORK SAFE: No, for init.txt only


(game_initial_bsp <long>)

debug map launching: sets the initial bsp for the next map.
NETWORK SAFE: No, for init.txt only


(game_tick_rate <long>)

debug map launching: sets the tick rate for the next map.
NETWORK SAFE: No, for init.txt only


(game_start <string>)

debug map launching: starts a game on the specified map.
NETWORK SAFE: No, for init.txt only


(language_set <string>)

change the language for localization
NETWORK SAFE: Unknown, assumed unsafe


(game_won)

causes the player to successfully finish the current level and move to the next
NETWORK SAFE: Unknown, assumed unsafe


(game_revert)

causes the player to revert to their previous saved game (for testing and cinematic skipping only please!)
NETWORK SAFE: Unknown, assumed unsafe


(main_menu)

goes back to the main menu
NETWORK SAFE: Unknown, assumed unsafe


(core_load)

loads debug game state from core\core.bin
NETWORK SAFE: Unknown, assumed unsafe


(core_load_name <string>)

loads debug game state from core\<path>
NETWORK SAFE: Unknown, assumed unsafe


(core_save)

saves debug game state to core\core.bin
NETWORK SAFE: Unknown, assumed unsafe


(core_save_name <string>)

saves debug game state to core\<path>
NETWORK SAFE: Unknown, assumed unsafe


(core_load_game)

loads level and game state from core\core.bin
NETWORK SAFE: Unknown, assumed unsafe


(core_load_game_name <string>)

loads level and game state from core\<path>
NETWORK SAFE: Unknown, assumed unsafe


(game_save_and_quit)

save & quit to the main menu
NETWORK SAFE: Unknown, assumed unsafe


(game_save_unsafe)

saves right now, even if the game is in an immediate-loss state (NEVER USE THIS! EVER!)
NETWORK SAFE: Unknown, assumed unsafe


(game_safe_to_save)

returns FALSE if it would be a bad idea to save the player's game right now
NETWORK SAFE: Unknown, assumed unsafe


(game_safe_to_speak)

returns FALSE if it would be a bad idea to play mission dialog right now
NETWORK SAFE: Unknown, assumed unsafe


(game_all_quiet)

returns FALSE if there are bad guys around, projectiles in the air, etc.
NETWORK SAFE: Unknown, assumed unsafe


(game_save)

checks to see if it is safe to save game, then saves (gives up after 8 seconds)
NETWORK SAFE: Unknown, assumed unsafe


(game_save_cancel)

cancels any pending game_save, timeout or not
NETWORK SAFE: Unknown, assumed unsafe


(game_save_no_timeout)

checks to see if it is safe to save game, then saves (this version never gives up)
NETWORK SAFE: Unknown, assumed unsafe


(game_save_immediate)

disregards player's current situation and saves (BE VERY CAREFUL!)
NETWORK SAFE: Unknown, assumed unsafe


(game_save_cinematic_skip)

don't use this, except in one place.
NETWORK SAFE: Unknown, assumed unsafe


(game_saving)

checks to see if the game is trying to save the map.
NETWORK SAFE: Unknown, assumed unsafe


(game_reverted)

don't use this for anything, you black-hearted bastards.
NETWORK SAFE: Unknown, assumed unsafe


(gui_reset)

cleans out the halox ui screens and errors
NETWORK SAFE: No


(net_session_create <string> <string>)

<ui_game_mode> <advertisement_mode> creates a session to play
NETWORK SAFE: No, for mainmenu only


(net_session_add <string>)

<ip:port> adds a session from the given ip:port to the local games browser 
NETWORK SAFE: Unknown, assumed unsafe


(net_test_ping)

network test: sends a ping
NETWORK SAFE: Yes


(net_test_ping_directed <string>)

<ip:port> network test: sends a ping to a specific address
NETWORK SAFE: Yes


(net_test_text_chat <string>)

<message> network test: sends a message
NETWORK SAFE: Yes


(net_test_text_chat_directed <string> <string>)

<ip:port> <message> network test: sends a message to a specific address
NETWORK SAFE: Yes


(net_test_player_color <long>)

network test: temporarily sets the color for all local players
NETWORK SAFE: Yes


(net_test_map_name <string>)

network test: sets the name of the scenario to play
NETWORK SAFE: Yes


(net_test_variant <string>)

network test: sets the game variant to play
NETWORK SAFE: Yes


(net_test_reset_objects)

network test: resets all objects on the map
NETWORK SAFE: Yes


(net_test_session_mode <string>)

network test: sets the session mode to play
NETWORK SAFE: Yes


(net_test_ui_game_mode <string>)

network test: sets the ui game mode to play
NETWORK SAFE: No, for mainmenu only


(net_test_advertisement_mode <string>)

network test: sets the advertisement mode to play
NETWORK SAFE: No, for mainmenu only


(net_test_game_variant_parameter <string> <long>)

network test: sets a parameter of the current game variant
NETWORK SAFE: No, for mainmenu only


(net_build_network_config)

writes a new network configuration file
NETWORK SAFE: Unknown, assumed unsafe


(net_build_game_variant <string>)

writes the current game variant to a file
NETWORK SAFE: Yes


(net_verify_game_variant <string>)

verifies the contents of a game variant file
NETWORK SAFE: Unknown, assumed unsafe


(net_load_and_use_game_variant <string>)

loads the contents of a game variant file and submits to networking for use in the current game
NETWORK SAFE: Unknown, assumed unsafe


(net_verify_packed_game_variant <string>)

verifies the contents of a packed game variant file
NETWORK SAFE: Unknown, assumed unsafe


(net_load_and_use_packed_game_variant <string>)

loads the contents of a packed game variant file and submits to networking for use in the current game
NETWORK SAFE: Unknown, assumed unsafe


(net_build_map_variant <string>)

writes the current map variant to a file
NETWORK SAFE: Yes


(net_verify_map_variant <string>)

verifies the contents of a map variant file
NETWORK SAFE: Unknown, assumed unsafe


(net_load_and_use_map_variant <string>)

loads the contents of a map variant file and submits to networking for use in the current game
NETWORK SAFE: Unknown, assumed unsafe


(net_verify_packed_map_variant <string>)

verifies the contents of a packed map variant file
NETWORK SAFE: Unknown, assumed unsafe


(net_load_and_use_packed_map_variant <string>)

loads the contents of a packed map variant file and submits to networking for use in the current game
NETWORK SAFE: Unknown, assumed unsafe


(game_export_variant_settings <string>)

export the current game engine variant settings to the specified text file
NETWORK SAFE: No


(alert_carry <long>)

<user_index> raise/lower player weapon toggle
NETWORK SAFE: Unknown, assumed unsafe


(online_set_is_connected_to_live <boolean>)

sets connected to live
NETWORK SAFE: Yes


(online_user_set_name <string>)

sets the name of the first user
NETWORK SAFE: Yes


(mp_players_by_team <long>)

<mp_team> given a team index, returns an object list containing all living player objects belonging to that team
NETWORK SAFE: Yes


(deterministic_end_game)

end game deterministically, by inserting a simulation queue event
NETWORK SAFE: Yes


(mp_active_player_count_by_team <long>)

<mp_team> given a team index, returns an object list containing all living player objects belonging to that team
NETWORK SAFE: Yes


(mp_game_won <short>)

<mp_team> given a team index, declares the game a victory for that team and a loss for all others
NETWORK SAFE: Yes


(mp_respawn_override_timers <short>)

<mp_team> causes all players on the specified team waiting to respawn (due to timer) to respawn immediately
NETWORK SAFE: Yes


(mp_ai_allegiance <short> <short>)

<team> <mp_team> causes an allegiance to be formed between an AI squad team and a multiplayer team
NETWORK SAFE: Yes


(mp_allegiance <short> <short>)

<mp_team> <mp_team> create an allegiance between two multiplayer teams
NETWORK SAFE: Yes


(mp_object_belongs_to_team <long> <short>)

<object> <mp_team> causes specified object to belong to the given team, so that only that team can pick it up
NETWORK SAFE: Yes


(mp_weapon_belongs_to_team <long> <short>)

<object> <mp_team> causes specified weapon to belong to the given team, so that only that team can pick it up
NETWORK SAFE: Yes


(mp_debug_goal_object_boundary_geometry <bool>)

toggle debug geometry for multiplayer goal objects
NETWORK SAFE: No


(load_preferences_from_file <string>)

<preferences filename> loads preferences from the specified file
NETWORK SAFE: Unknown, assumed unsafe


(load_customization_from_file <string>)

<customization filename> loads customization from the specified file
NETWORK SAFE: Unknown, assumed unsafe


(cheat_all_powerups)

drops all powerups near player
NETWORK SAFE: Yes


(cheat_all_vehicles)

drops all vehicles on player
NETWORK SAFE: Yes


(cheat_all_weapons)

drops all weapons near player
NETWORK SAFE: Yes


(cheat_all_chars)

drops all characters near player
NETWORK SAFE: Yes


(cheat_teleport_to_camera)

teleports player to camera location
NETWORK SAFE: Yes


(cheat_active_camouflage <bool>)

gives the player active camouflage
NETWORK SAFE: Yes


(cheat_active_camouflage_by_player <long> <bool>)

gives a specific player active camouflage
NETWORK SAFE: Yes


(debug_menu_rebuild)

Reparses the debug menu from the text file.


(drop <string>)

drops the named tag e.g. objects\vehicles\banshee\banshee.vehicle
NETWORK SAFE: Yes, for objects


(drop_variant <string> <string>)

drops the named tag e.g. objects\vehicles\banshee\banshee.vehicle using the specified variant name



(drop_permutation <string> <string>)

drops the named tag e.g. objects\characters\brute\brute.biped using the specified permutation. permutations are specified as a comma-delimited string of region=permutation pairs (e.g. region1=permutation1,region2=permutation2).



(ai_enable <boolean>)

turns all AI on or off.
NETWORK SAFE: Yes


(director_debug_camera <boolean>)

enable/disable camera debugging
NETWORK SAFE: Unknown, assumed unsafe


(camera_control <boolean>)

toggles script control of the camera.
NETWORK SAFE: Unknown, assumed unsafe


(camera_set_mode <long> <long>)

<user_index> <camera_mode> sets user's camera perspective
NETWORK SAFE: Unknown, assumed unsafe


(debug_camera_save)

saves the camera position and facing.
NETWORK SAFE: Unknown, assumed unsafe


(debug_camera_load)

loads the saved camera position and facing.
NETWORK SAFE: Unknown, assumed unsafe


(crash <string>)

crashes (for debugging).
NETWORK SAFE: Unknown, assumed unsafe


(status)

prints the value of all global status variables.
NETWORK SAFE: Unknown, assumed unsafe


(player_force_mode <string_id>)

force your will upon the player
NETWORK SAFE: Unknown, assumed unsafe


(test_download_storage_file <string> <string>)

<url> <filename> downloads a file from LSP to the client
NETWORK SAFE: Unknown, assumed unsafe


(lsp_info_get)

gets the LSP server info
NETWORK SAFE: Unknown, assumed unsafe


(lsp_info_set <string>)

<ip:port> sets the LSP server address and port
NETWORK SAFE: Unknown, assumed unsafe


(player_ragdoll)

ragdolls the players biped.
NETWORK SAFE: Unknown, assumed unsafe


(player_drop_weapon)

drops the players held weapon.
NETWORK SAFE: Unknown, assumed unsafe


(player_add_weapon <string> <long>)

<weapon_definition_index> <weapon_addition_method> gives the player a weapon.
NETWORK SAFE: Unknown, assumed unsafe


(levels_add_fake_map_solo <string>)

<scenario_path> adds a fake map for campaign
NETWORK SAFE: Unknown, assumed unsafe


(levels_add_map_solo <long> <string>)

<map_id> <scenario_path> adds a map with the specified map id for campaign
NETWORK SAFE: Unknown, assumed unsafe


(levels_add_fake_map_multi <string>)

<scenario_path> adds a fake map for multiplayer
NETWORK SAFE: Unknown, assumed unsafe


(levels_add_map_multi <long> <string>)

<map_id> <scenario_path> adds a map with the specified map id for multiplayer
NETWORK SAFE: Unknown, assumed unsafe


(xoverlapped_debug_render <bool>)

toggle display a list of active xoverlapped tasks
NETWORK SAFE: Unknown, assumed unsafe


(overlapped_display_task_descriptions)

displays all tasks
NETWORK SAFE: lol


(overlapped_task_inject_error <string> <bool>)

inject error for tasks
NETWORK SAFE: lol


(overlapped_task_pause <string> <bool>)

pause tasks
NETWORK SAFE: lol


; AVAILABLE EXTERNAL GLOBALS:

(<boolean> debug_no_drawing)

(<boolean> debug_force_all_player_views_to_default_player)

(<boolean> debug_render_horizontal_splitscreen)

(<boolean> debug_load_panic_to_main_menu)

(<boolean> display_framerate)

(<boolean> display_frame_deltas)

(<boolean> console_status_string_render)

(<boolean> console_pauses_game)

(<boolean> terminal_render)

(<boolean> console_dump_to_debug_display)

(<real> director_camera_speed_scale)

(<real> camera_global_fov)

(<real> camera_yaw_scale)

(<real> camera_pitch_scale)

(<real> camera_forward_scale)

(<real> camera_side_scale)

(<real> camera_up_scale)

(<real> flying_camera_maximum_boost_speed)

(<real> flying_camera_movement_delay)

(<boolean> net_skip_countdown)

(<boolean> net_experimental)

(<boolean> net_show_latency_and_framerate_metrics_on_chud)

(<boolean> net_fake_latency_and_framerate_metrics_on_chud)

(<boolean> debug_enable_force_phonebooth_assassinate)

(<boolean> cheat_deathless_player)

(<boolean> cheat_valhalla)

(<boolean> cheat_jetpack)

(<boolean> cheat_infinite_ammo)

(<boolean> cheat_bottomless_clip)

(<boolean> cheat_bump_possession)

(<boolean> cheat_super_jump)

(<boolean> cheat_reflexive_damage_effects)

(<boolean> cheat_medusa)

(<boolean> cheat_omnipotent)

(<boolean> cheat_controller)

(<boolean> cheat_chevy)

(<boolean> cheat_porcupine)

(<boolean> cheat_infinite_equipment_energy)

(<long> render_debug_toggle_default_lightmaps_texaccum)

(<boolean> render_debug_toggle_default_static_lighting)

(<boolean> render_debug_toggle_default_dynamic_lighting)

(<boolean> render_debug_toggle_default_sfx)

(<long> render_debug_depth_render)

(<real> render_debug_depth_render_scale_r)

(<real> render_debug_depth_render_scale_g)

(<real> render_debug_depth_render_scale_b)

(<boolean> render_default_lighting)

(<boolean> debug_trigger_volumes)

(<boolean> debug_pvs_activation)

(<boolean> debug_objects_player_only)

(<boolean> render_water)

(<boolean> render_water_tessellated)

(<boolean> render_water_interaction)

(<boolean> render_water_wireframe)

(<boolean> debug_damage)

(<boolean> debug_damage_verbose)

(<boolean> collision_debug)

(<boolean> collision_debug_water_proxy)

(<boolean> collision_debug_spray)

(<boolean> collision_debug_features)

(<boolean> collision_debug_phantom_bsp)

(<boolean> collision_debug_lightmaps)

(<boolean> collision_debug_geometry_sampling)

(<boolean> collision_debug_flags)

(<boolean> collision_debug_flag_structure)

(<boolean> collision_debug_flag_water)

(<boolean> collision_debug_flag_instanced_geometry)

(<boolean> collision_debug_flag_objects)

(<boolean> collision_debug_flag_objects_bipeds)

(<boolean> collision_debug_flag_objects_giants)

(<boolean> collision_debug_flag_objects_effect_scenery)

(<boolean> collision_debug_flag_objects_vehicles)

(<boolean> collision_debug_flag_objects_weapons)

(<boolean> collision_debug_flag_objects_equipment)

(<boolean> collision_debug_flag_objects_terminals)

(<boolean> collision_debug_flag_objects_projectiles)

(<boolean> collision_debug_flag_objects_scenery)

(<boolean> collision_debug_flag_objects_machines)

(<boolean> collision_debug_flag_objects_controls)

(<boolean> collision_debug_flag_objects_sound_scenery)

(<boolean> collision_debug_flag_objects_crates)

(<boolean> collision_debug_flag_objects_creatures)

(<boolean> collision_debug_flag_ignore_child_objects)

(<boolean> collision_debug_flag_ignore_nonpathfindable_objects)

(<boolean> collision_debug_flag_ignore_cinematic_objects)

(<boolean> collision_debug_flag_ignore_dead_bipeds)

(<boolean> collision_debug_flag_ignore_passthrough_bipeds)

(<boolean> collision_debug_flag_front_facing_surfaces)

(<boolean> collision_debug_flag_back_facing_surfaces)

(<boolean> collision_debug_flag_ignore_two_sided_surfaces)

(<boolean> collision_debug_flag_ignore_invisible_surfaces)

(<boolean> collision_debug_flag_ignore_breakable_surfaces)

(<boolean> collision_debug_flag_allow_early_out)

(<boolean> collision_debug_flag_try_to_keep_location_valid)

(<boolean> collision_debug_repeat)

(<real> collision_debug_point_x)

(<real> collision_debug_point_y)

(<real> collision_debug_point_z)

(<real> collision_debug_vector_i)

(<real> collision_debug_vector_j)

(<real> collision_debug_vector_k)

(<real> collision_debug_length)

(<real> collision_debug_width)

(<real> collision_debug_height)

(<long> collision_debug_ignore_object_index)

(<boolean> debug_structure_markers)

(<boolean> debug_structure_surface_references)

(<boolean> debug_structure_soft_ceilings)

(<boolean> debug_structure_soft_kill)

(<boolean> debug_structure_slip_surfaces)

(<boolean> debug_structure_cluster_skies)

(<boolean> debug_structure_invisible)

(<boolean> debug_structure)

(<boolean> debug_structure_automatic)

(<boolean> debug_structure_unique_colors)

(<boolean> debug_structure_complexity)

(<boolean> debug_structure_seam_edges)

(<boolean> debug_instanced_geometry)

(<boolean> debug_instanced_geometry_bounding_spheres)

(<boolean> debug_instanced_geometry_names)

(<boolean> debug_instanced_geometry_vertex_counts)

(<boolean> debug_instanced_geometry_collision_geometry)

(<boolean> debug_zone_set_critical_portals)

(<boolean> debug_structure_water)

(<boolean> water_physics_debug)

(<boolean> debug_input)

(<boolean> debug_input_abstraction)

(<boolean> debug_input_mouse_state)

(<boolean> ai_render)

(<boolean> ai_render_dialogue_player_weights)

(<boolean> ai_render_behavior_stack_all)

(<boolean> ai_render_character_names)

(<boolean> ai_render_stimuli)

(<boolean> ai_render_sectors)

(<boolean> ai_render_object_properties)

(<boolean> ai_render_intersection_links)

(<boolean> ai_render_threshold_links)

(<boolean> ai_render_suppress_combat)

(<boolean> ai_render_vehicle_reservations)

(<boolean> ai_render_objectives)

(<boolean> ai_render_strength)

(<boolean> ai_debug_tracking_data)

(<boolean> ai_debug_perception_data)

(<boolean> ai_debug_combat_status)

(<boolean> ai_render_tracked_props_all)

(<boolean> ai_render_targets_all)

(<boolean> ai_render_command_scripts)

(<boolean> ai_render_dialogue_variants)

(<boolean> ai_render_dynamic_firing_positions)

(<boolean> ai_render_vehicle_interest)

(<boolean> ai_render_player_battle_vector)

(<boolean> ai_render_player_needs_vehicle)

(<real> water_physics_velocity_minimum)

(<real> water_physics_velocity_maximum)

(<boolean> debug_objects)

(<boolean> debug_objects_early_movers)

(<boolean> debug_objects_sound_spheres)

(<boolean> debug_objects_indices)

(<boolean> debug_objects_programmer)

(<boolean> debug_objects_garbage)

(<boolean> debug_objects_names)

(<boolean> debug_objects_full_names)

(<boolean> debug_objects_active_nodes)

(<boolean> debug_objects_animation_times)

(<boolean> debug_objects_functions)

(<boolean> debug_objects_position_velocity)

(<boolean> debug_objects_origin)

(<boolean> debug_objects_root_node)

(<boolean> debug_objects_bounding_spheres)

(<boolean> debug_objects_attached_bounding_spheres)

(<boolean> debug_objects_dynamic_render_bounding_spheres)

(<boolean> debug_objects_model_targets)

(<boolean> debug_objects_collision_models)

(<boolean> debug_objects_profile_times)

(<boolean> debug_objects_water_physics)

(<boolean> debug_objects_physics_models)

(<boolean> debug_objects_contact_points)

(<boolean> debug_objects_constraints)

(<boolean> debug_objects_vehicle_physics)

(<boolean> debug_objects_mass)

(<boolean> debug_objects_pathfinding)

(<boolean> debug_objects_node_bounds)

(<boolean> debug_objects_animation)

(<boolean> debug_objects_physics_control_node)

(<boolean> debug_objects_biped_autoaim_pills)

(<boolean> debug_objects_ground_plane)

(<boolean> debug_objects_movement_mode)

(<boolean> debug_biped_throttle)

(<boolean> debug_objects_unit_pathfinding_surface)

(<boolean> debug_objects_pendulum)

(<boolean> debug_objects_unit_vectors)

(<boolean> debug_objects_unit_seats)

(<boolean> debug_objects_unit_mouth_apeture)

(<boolean> debug_objects_unit_firing)

(<boolean> debug_objects_unit_acceleration)

(<boolean> debug_objects_unit_camera)

(<boolean> debug_sound_timing)

(<boolean> debug_duckers)

(<boolean> debug_sound_listeners)

(<boolean> debug_sound)

(<boolean> debug_sound_manager_channels)

(<real> havok_collision_tolerance)

(<long> havok_debug_mode)

(<long> havok_thread_count)

(<long> havok_environment_type)

(<real> havok_shape_radius)

(<boolean> havok_jumping_beans)

(<boolean> havok_disable_deactivation)

(<real> havok_deactivation_reference_distance)

(<boolean> havok_weld_environment)

(<boolean> havok_batch_add_entities_disabled)

(<boolean> havok_shape_cache)

(<boolean> havok_shape_cache_debug)

(<boolean> havok_enable_back_stepping)

(<boolean> havok_enable_sweep_shapes)

(<boolean> havok_display_stats)

(<boolean> havok_initialize_profiling)

(<boolean> impacts_debug)

(<boolean> proxies_debug)

(<boolean> collision_damage_debug)

(<boolean> havok_play_impact_effects)

(<boolean> havok_play_biped_impact_effects)

(<boolean> physics_debug)

(<boolean> havok_cleanup_inactive_agents)

(<boolean> havok_memory_always_system)

(<boolean> contrail_render_enable)

(<boolean> soft_ceilings_disable)

(<boolean> cubemap_debug)

(<boolean> debug_camera_projection)

(<real> render_screenspace_center)

(<real> ui_time_scale)

(<boolean> render_thread_enable)

(<boolean> game_paused)

(<real> game_speed)

(<boolean> chud_enabled)

(<boolean> chud_debug_grid)

(<boolean> chud_debug_messages)

(<boolean> chud_debug_crosshair)

(<boolean> chud_debug_metagame)

(<boolean> game_time_lock)

(<boolean> game_time_statistics)

(<boolean> debug_game_save)

(<boolean> static_fp_fov)

(<boolean> centered_crosshair)

(<boolean> enable_better_cpu_gpu_sync)

(<boolean> reduce_widescreen_fov_during_cinematics)

(<real> render_debug_aspect_ratio_scale)

(<boolean> render_debug_force_4x3_aspect_ratio)

(<short> render_debug_transparent_sort_method)

(<boolean> render_pc_specular)

(<boolean> render_pc_albedo_lighting)

(<boolean> mean_look_sensitivity)

(<long> watermark_enabled)

(<boolean> debug_skulls)

(<boolean> debug_weapons)

(<boolean> debug_weapons_triggers)

(<boolean> debug_weapons_barrels)

(<boolean> debug_weapons_magazines)

(<boolean> debug_weapons_primary)

(<boolean> debug_weapons_secondary)

(<boolean> debug_animation_fp_sprint_disable)

